{"version":3,"sources":["services/filmsApi.js","components/Error/Error.js","components/Error/Error.module.css","components/Containers/SectionContainer.js","components/Containers/SectionContainer.module.css","components/Films/FilmsList.js","components/Films/FilmsList.module.css","components/Films/FilmsListItem.js","components/Films/FilmsListItem.module.css","components/FormSearch/FormSearch.module.css","components/FormSearch/FormSearch.js","pages/MoviesPage.js"],"names":["key","baseUrl","imageBaseUrl","getAllFilms","axios","get","then","response","data","results","getDetailsAboutOneFilm","movieId","getCastAboutOneFilm","getReviewsAboutOneFilm","getFilmByRequest","query","Error","text","className","s","errorMassage","defaultProps","module","exports","SectionContainer","children","sectionHead","section","FilmsList","list","FilmsListItem","film","location","item","to","pathname","id","state","from","title","name","withRouter","FormSearch","films","errorMessage","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","length","localStorage","setItem","catch","error","status_message","queryFromLocalStorage","getItem","this","formSearch","onSubmit","inputFormSearch","type","autoComplete","placeholder","autoFocus","onChange","btnFormSearch","map","Component","MoviesPage"],"mappings":"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","file":"static/js/movies-page.58448fdd.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst key = 'ad9b2050466161c0639ae105a2bb6fd5';\r\nconst baseUrl = 'https://api.themoviedb.org/3';\r\nconst imageBaseUrl = 'https://image.tmdb.org/t/p/w200';\r\n\r\n\r\nconst getAllFilms = () => {\r\n    \r\n    return  axios\r\n    .get(`${baseUrl}/trending/all/day?api_key=${key}`)\r\n    .then(response => response.data.results);\r\n};\r\n\r\nconst getDetailsAboutOneFilm = (movieId) => {\r\n    return axios\r\n    .get(`${baseUrl}/movie/${movieId}?api_key=${key}`)\r\n    .then(response => response.data);\r\n};\r\n\r\nconst getCastAboutOneFilm = (movieId) => {\r\n    return axios\r\n    .get(`${baseUrl}/movie/${movieId}/credits?api_key=${key}`)\r\n    .then(response =>response.data);\r\n};\r\n\r\nconst getReviewsAboutOneFilm = (movieId) => {\r\n    return axios\r\n    .get(`${baseUrl}/movie/${movieId}/reviews?api_key=${key}`)\r\n    .then(response => response.data.results);\r\n};\r\n\r\n\r\nconst getFilmByRequest = (query) => {\r\n    return axios\r\n    .get(`${baseUrl}/search/movie?api_key=${key}&language=en-US&page=1&include_adult=false&query=${query}`)\r\n    .then(response => response.data.results);\r\n};\r\n\r\n\r\nexport {imageBaseUrl, getAllFilms, getDetailsAboutOneFilm, getReviewsAboutOneFilm, getCastAboutOneFilm, getFilmByRequest};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Error.module.css';\n\n\nconst Error = ({text}) => {\n    return <div className={s.errorMassage}>{`Sorry, ${text}`}</div>\n};\n\n\nError.defaultProps = {\n    text: 'we have trouble in this page',\n};\n\nError.propTypes = {\n    text: PropTypes.string,\n};\n\n\nexport default Error;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMassage\":\"Error_errorMassage__3DOjN\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './SectionContainer.module.css';\r\n\r\nconst SectionContainer = ({children, sectionHead}) => {\r\n    return <section className={s.section}>\r\n        <h2>{sectionHead}</h2>\r\n        {children}\r\n        </section>\r\n};\r\n\r\n\r\nSectionContainer.defaultProps = {\r\n    sectionHead: 'Section head',\r\n};\r\n\r\nSectionContainer.propTypes = {\r\n    sectionHead: PropTypes.string,\r\n};\r\n\r\n\r\nexport default SectionContainer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SectionContainer_section__2WEsC\"};","import React from 'react';\r\nimport s from './FilmsList.module.css';\r\n\r\nconst FilmsList = ({children}) => {\r\n    return <ul className={s.list}>{children}</ul>\r\n};\r\n\r\nexport default FilmsList;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FilmsList_list__2HWd9\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nimport s from './FilmsListItem.module.css';\r\n\r\nconst FilmsListItem = ({film, location}) => {\r\n    return <li className={s.item}>\r\n    <Link \r\n        to={{\r\n            pathname: `/movies/${film.id}`,\r\n            state: {\r\n                from: location,\r\n            },\r\n        }}\r\n        >\r\n        {film.title || film.name}\r\n    </Link>\r\n</li>\r\n};\r\n\r\n\r\nFilmsListItem.defaultProps = {\r\n    film: {},\r\n    location: {},\r\n};\r\n\r\nFilmsListItem.propTypes = {\r\n    film: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        title: PropTypes.string,\r\n        name: PropTypes.string,\r\n    }),\r\n\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string,\r\n    }),\r\n};\r\n\r\n\r\nexport default withRouter(FilmsListItem);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FilmsListItem_item__1D-6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSearch\":\"FormSearch_formSearch__2fAnb\",\"inputFormSearch\":\"FormSearch_inputFormSearch__1aKRY\",\"btnFormSearch\":\"FormSearch_btnFormSearch__2ycLS\"};","\nimport React, {Component} from 'react';\nimport s from './FormSearch.module.css'\n\nimport {getFilmByRequest} from '../../services/filmsApi';\n\n\nimport Error from '../Error';\nimport FilmsList from '../Films/FilmsList';\nimport FilmsListItem from '../Films/FilmsListItem';\n\n\nclass FormSearch  extends Component {\n    state = {\n        query: '',\n        films: [],\n        errorMessage: null,\n    };\n\n    componentDidMount() {\n        const queryFromLocalStorage = localStorage.getItem('queryInLocalStorage');\n\n        if(queryFromLocalStorage ) {\n            return getFilmByRequest(queryFromLocalStorage)\n            .then(response => this.setState({films: response}))\n            .catch(error =>\n                this.setState({\n                  errorMessage: error.response.data.status_message,\n                })\n            )\n        };\n    };\n\n    handleChange = e => {\n        this.setState({query: e.currentTarget.value});\n    };\n\n    handleSubmit = e => {\n        const {query} = this.state;\n        e.preventDefault();\n\n        if(query.length > 0) {\n            localStorage.setItem('queryInLocalStorage', query);\n            getFilmByRequest(query)\n            .then(response => this.setState({films: response}))\n            .catch(error =>\n                this.setState({\n                  errorMessage: error.response.data.status_message,\n                })\n            )\n        };\n    };\n\n    render() {\n        const {films, query, errorMessage} = this.state;\n        return (\n            <>\n                <form className={s.formSearch} onSubmit={this.handleSubmit}>\n                    <input \n                        className={s.inputFormSearch} \n                        type=\"text\"\n                        autoComplete=\"off\"\n                        placeholder=\"What film are you looking for?\"\n                        autoFocus\n                        onChange={this.handleChange}\n                        value={query}\n                    >\n                    </input>\n                    <button className={s.btnFormSearch} type=\"submit\">Find!</button>\n                </form>\n\n                {errorMessage && <Error text={errorMessage} />}\n\n                {films.length > 0 && \n                <FilmsList>\n                    {films.map((film) => <FilmsListItem key={film.id} film={film}/>)}\n                </FilmsList>\n                }\n            </>\n        );\n    };\n};\n\n\nexport default FormSearch;","import React, {Component} from 'react';\r\n\r\nimport SectionContainer from '../components/Containers/SectionContainer';\r\nimport FormSearch from '../components/FormSearch/FormSearch';\r\n\r\nclass MoviesPage extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <SectionContainer sectionHead=\"Search films form\">\r\n                <FormSearch />\r\n            </SectionContainer>\r\n        </>\r\n        )\r\n    };\r\n};\r\n\r\nexport default MoviesPage;"],"sourceRoot":""}